#include <bits/stdc++.h>
#define KHALED_WALEED_ATTIA ios::sync_with_stdio(0),cin.tie(0),cout.tie(0);
#define space " "
#define endl "\n"
#define ll long  long
void fileInput();
using namespace std;

const int dx[] = {0, 0, 1, 1},
        dy[] = {0, 1, 0, 1};
const ll mod = 100000007;
const int N = 1000+9;
int p[N], c[N], memo[N][10009];
int n, k;

int wag3(int i, int rem){
    if(rem < 0)
        return -1e7;
    if(i == n)
        return 0;

    int &ret = memo[i][rem];
    if(~ret)
        return ret;

    int ch1 = c[i] + wag3(i+1, rem-p[i]);
    int ch2 = wag3(i+1, rem);

    return ret = max(ch1, ch2);
}
int arr[6][100009];
int main() {
    KHALED_WALEED_ATTIA
    fileInput();
    for(ll i = 2; i <= 100005; i++){
        ll temp = i;
        set<int>st;
        for(ll j = 2; j*j <= temp; j++){
            while(temp%j == 0){
                st.insert(j);
                temp/=j;
            }
        }
        if(temp != 1)
            st.insert(temp);
//        cout<<i<<space<<st.size()<<endl;
        if(st.size() <= 5)
            arr[st.size()][i] = 1;
    }
    for (int j = 1; j < 6; j++) {
        for(int i = 1; i <= 100005; i++) {
            arr[j][i] += arr[j][i - 1];
        }
    }
    int t;
    cin >>t;
    while(t--){
        int k, a, b;
        cin >>a >>b >>k;
        cout<<arr[k][b]-arr[k][a-1]<<endl;
    }
    return 0;
}

void fileInput(){
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif

}









/*
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@   @@@@@@@@   @@@               @@@@   @@@@@@@@@@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@   @@@@@@@@   @@@   @@@@@@@@@@@@@@@@   @@@@@@@@@@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@   @@@@@@@@   @@@   @@@@@@@@@@@@@@@@   @@@@@@@@@@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@   @@@@@@@@   @@@   @@@@@@@@@@@@@@@@   @@@@@@@@@@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@   @@@@@@@@   @@@   @@@@@@@@@@@@@@@@   @@@@@@@@@@   @@@@@@@@@@@@                  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@              @@@            @@@@@@@   @@@@@@@@@@   @@@@@@@@@@@@   @@@@@@@@@@@@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@   @@@@@@@@   @@@   @@@@@@@@@@@@@@@@   @@@@@@@@@@   @@@@@@@@@@@@   @@@@@@@@@@@@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@   @@@@@@@@   @@@   @@@@@@@@@@@@@@@@   @@@@@@@@@@   @@@@@@@@@@@@   @@@@@@@@@@@@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@   @@@@@@@@   @@@   @@@@@@@@@@@@@@@@   @@@@@@@@@@   @@@@@@@@@@@@   @@@@@@@@@@@@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@   @@@@@@@@   @@@   @@@@@@@@@@@@@@@@   @@@@@@@@@@   @@@@@@@@@@@@   @@@@@@@@@@@@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@   @@@@@@@@   @@@               @@@@          @@@          @@@@@                  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
_________________________________________________________________________________________________________________
;;  ;;;;;;  ;;;;  ;;;;;;;;;;  ;;;;;;;;;;;    ;;;;;;;;;;;;;  ;;;;;;;;;;;;;;;              ;;;             ;;;;;;;;
;;  ;;;;  ;;;;;;  ;;;;;;;;;;  ;;;;;;;;;;  ;;  ;;;;;;;;;;;;  ;;;;;;;;;;;;;;;  ;;;;;;;;;;;;;;;   ;;;;;;;;;   ;;;;;;
;;  ;;  ;;;;;;;;  ;;;;;;;;;;  ;;;;;;;;;  ;;;;  ;;;;;;;;;;;  ;;;;;;;;;;;;;;;  ;;;;;;;;;;;;;;;   ;;;;;;;;;;   ;;;;;
;;    ;;;;;;;;;;  ;;;;;;;;;;  ;;;;;;;;  ;;;;;;  ;;;;;;;;;;  ;;;;;;;;;;;;;;;  ;;;;;;;;;;;;;;;   ;;;;;;;;;;   ;;;;;
;;  ;;;;;;;;;;;;              ;;;;;;;            ;;;;;;;;;  ;;;;;;;;;;;;;;;           ;;;;;;   ;;;;;;;;;;;   ;;;;
;;    ;;;;;;;;;;  ;;;;;;;;;;  ;;;;;;  ;;;;;;;;;;  ;;;;;;;;  ;;;;;;;;;;;;;;;  ;;;;;;;;;;;;;;;   ;;;;;;;;;;;   ;;;;
;;  ;;  ;;;;;;;;  ;;;;;;;;;;  ;;;;;  ;;;;;;;;;;;;  ;;;;;;;  ;;;;;;;;;;;;;;;  ;;;;;;;;;;;;;;;   ;;;;;;;;;;;   ;;;;
;;  ;;;;  ;;;;;;  ;;;;;;;;;;  ;;;;  ;;;;;;;;;;;;;;  ;;;;;;  ;;;;;;;;;;;;;;;  ;;;;;;;;;;;;;;;   ;;;;;;;;;;;   ;;;;
;;  ;;;;;;  ;;;;  ;;;;;;;;;;  ;;;  ;;;;;;;;;;;;;;;;  ;;;;;  ;;;;;;;;;;;;;;;  ;;;;;;;;;;;;;;;   ;;;;;;;;;;;  ;;;;;
;;  ;;;;;;;;  ;;  ;;;;;;;;;;  ;;  ;;;;;;;;;;;;;;;;;;  ;;;;             ;;;;              ;;;               ;;;;;;
-----------------------------------------------------------------------------------------------------------------
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



 */


